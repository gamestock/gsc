#include <test.h>
#include <winuser.h>
#include <winnt.h>

typedef struct tagPOINT
{
    LONG  x;
    LONG  y;
} POINT;

typedef struct tagMOUSEINPUT {
	DWORD type; //from INPUT
    LONG    dx;
    LONG    dy;
    DWORD   mouseData;
    DWORD   dwFlags;
    DWORD   time;
    ULONG_PTR dwExtraInfo;
} MOUSEINPUT;

#define INPUT_MOUSE 0

#define MOUSEEVENTF_MOVE        0x0001
#define MOUSEEVENTF_LEFTDOWN    0x0002
#define MOUSEEVENTF_LEFTUP      0x0004
#define MOUSEEVENTF_RIGHTDOWN   0x0008
#define MOUSEEVENTF_RIGHTUP     0x0010
#define MOUSEEVENTF_MIDDLEDOWN  0x0020
#define MOUSEEVENTF_MIDDLEUP    0x0040
#define MOUSEEVENTF_XDOWN       0x0080
#define MOUSEEVENTF_XUP         0x0100
#define MOUSEEVENTF_WHEEL       0x0800

#define VK_LCONTROL       0xA2

#define VK_LBUTTON        0x01
#define VK_RBUTTON        0x02
#define VK_CANCEL         0x03
#define VK_MBUTTON        0x04    /* NOT contiguous with L & RBUTTON */

void left_click()
{
	mi = new MOUSEINPUT;
	std();
	memset(mi,0,mi.size);
	mi->type = INPUT_MOUSE;
	mi->dwFlags = MOUSEEVENTF_LEFTDOWN;
	
	u32();
	
	SendInput(1, mi, mi.size);
	
	mi->dwFlags = MOUSEEVENTF_LEFTUP;
	
	SendInput(1, mi, mi.size);
}

main()
{
	printf("1\n");
	u32();
	while(1==1)
	{
		click=false;
		wait .05;
		s = GetAsyncKeyState(VK_MBUTTON);
		
		if(s == 32768) {
			click=true;
		}
		if(s == -32768)
		{
			click=true;
		}
		
		if(click == true)
		{
			left_click();
			printf("clicking!\n");
		}
	}
} 